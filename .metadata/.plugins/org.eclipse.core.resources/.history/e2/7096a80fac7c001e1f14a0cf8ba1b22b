package data.dao;

import java.io.Reader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;

import data.vo.Professor_career_evaluation_VO;
import data.vo.Student_VO;

public class Scholar_Evaluation_DAO {
	
	private static SqlSessionFactory sqlMapper = null;

	private static SqlSessionFactory getInstance() {
		if (sqlMapper == null) {
			try {
				String resource = "mybatis/SqlMapConfig.xml";
				Reader reader = Resources.getResourceAsReader(resource);
				sqlMapper = new SqlSessionFactoryBuilder().build(reader);
				reader.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		return sqlMapper;
	}

	public static ArrayList<Student_VO> getStuduent_AllList(String professor) {

		sqlMapper = getInstance();
		SqlSession session = sqlMapper.openSession();

		List<Student_VO> list = new ArrayList<Student_VO>();

		list = session.selectList("mapper.student.selectAll_pro", professor);

		return (ArrayList<Student_VO>) list;
	}

	private static Connection getConnection() throws Exception {

		String url = "jdbc:mysql://localhost:3306/ncp";
		String id = "root";
		String pw = "1234";

		Class.forName("com.mysql.cj.jdbc.Driver");
		Connection con = DriverManager.getConnection(url, id, pw);
		return con;

	}

	public static void SetEvaluation( String univertion_number) {
		Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
		String sql = null;

		try {

			Connection con = getConnection();
			Statement stmt = con.createStatement();

			sql = "SELECT 1 FROM Professor_Career_Evaluation WHERE number = ?";
			
			pstmt = conn.prepareStatement(sql);
            // 쿼리 파라미터 설정
            pstmt.setString(1, univertion_number);

            // SQL 쿼리 실행
            rs = pstmt.executeQuery();

            // 레코드 존재 여부 확인
            if (rs.next()) {
                // 레코드가 존재할 경우
                System.out.println("Record exists.");
            } else {
                // 레코드가 존재하지 않을 경우
                System.out.println("Record does not exist.");
            }
			stmt.close();
			con.close();

		} catch (Exception e) {

		}
	}

	public static void deleteCareer_Evaluation(String student) {

		sqlMapper = getInstance();
		SqlSession session = sqlMapper.openSession();

		session.delete("mapper.scholar.delete", student);
		session.commit();

	}

	public static void insertCareer_Evaluation(String student, ArrayList<String> checkList, String professor) {
		sqlMapper = getInstance();
		SqlSession session = sqlMapper.openSession();

		List<Professor_career_evaluation_VO> list = new ArrayList<>();

		for (int i = 0; i < checkList.size(); i++) {
			list.add(new Professor_career_evaluation_VO(student, (i + 1), Integer.parseInt(checkList.get(i)), professor,
					"now()"));
		}

		Map<String, Object> map = new HashMap<>();
		map.put("list", list);

		session.insert("mapper.scholar.insert_Evaluation", map);
		session.commit();

	}

}
